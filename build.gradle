buildscript {
  ext {
    ver = [
      projectMajor: "0",

      java: "11",
      lombok: "1.18.+",

      guava: "28.0-jre",
      commonsLang3: "3.9",

      jjwt: "0.10.+",

			springBoot: "2.1.8.RELEASE",
			springCloud: "Greenwich.SR3",
      springfoxSwagger: "2.9.+",

      junit4: "4.12",
      // spring-test required 5.3 version
      junit5: "5.3.+",
      assertj: "3.+",
      restAssured: "4.0.+",

			springDependencyManagementPlugin: "1.0.8.RELEASE",
      gradleDockerComposePlugin: "0.9.+",
      gradleDockerPlugin: "4.+",
    ]

    springBootVersion = ver.springBoot
    springCloudVersion = ver.springCloud

    excludeKeepDirPattern = "**/.keepdir"

    group = "io.agatsenko"
    sourceCompatibility = ver.java

    dockerImageJava = "adoptopenjdk:11-jre-hotspot"
    dockerLabelMaintainer = "Alexander Gatsenko (alexandr.gatsenko@gmail.com)"
  }

  // override spring bom dependency versions
  ext["commons-lang3.version"] = ver.commonsLang3
  ext["rest-assured.version"] = ver.restAssured

  repositories {
		mavenCentral()
    maven {
		  url("https://plugins.gradle.org/m2/")
    }
	}

	dependencies {
    classpath "io.spring.gradle:dependency-management-plugin:${ver.springDependencyManagementPlugin}"
    classpath "org.springframework.boot:spring-boot-gradle-plugin:${ver.springBoot}"
    classpath "com.avast.gradle:gradle-docker-compose-plugin:${ver.gradleDockerComposePlugin}"
    classpath "com.bmuschko:gradle-docker-plugin:${ver.gradleDockerPlugin}"
	}
}

apply plugin: "docker-compose"

dockerCompose {
  useComposeFiles = ["docker-compose.dev.yml"]

  mongo {
    useComposeFiles = ["docker-compose.dev.yml"]
    startedServices = ["todo-mongo", "todo-mongo-express"]
  }

  onlymongo {
    useComposeFiles = ["docker-compose.dev.yml"]
    startedServices = ["todo-mongo"]
  }

  infra {
    useComposeFiles = ["docker-compose.dev.yml"]
    startedServices = [
        "todo-mongo",
        "todo-mongo-express",
        "todo-config-server",
        "todo-eureka-server",
        "todo-zuul-server"
    ]
  }
}
